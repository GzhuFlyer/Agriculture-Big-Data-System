C51 COMPILER V9.01   MAIN                                                                  05/17/2018 14:39:28 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: e:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /****************************************************************************
   2          *函数名：main
   3          *输  入：void
   4          *输  出：void
   5          *功  能：获取光照，土壤水分，空气温度湿度数值
   6          *                并且通过ESP8266Wifi模块将数据发送给服务器
   7          ****************************************************************************/
   8          
   9          
  10          #include "reg52.h"
  11          #include "string.h"
  12          #include "dht11.h"
  13          #include "XPT2046.h"
  14          
  15          sbit led1  = P2^0;
  16          sbit led2 = P2^1;
  17          sbit led3 = P2^2;
  18          sbit led4 = P2^3;
  19          sbit led5 = P2^4;
  20          sbit led6 = P2^5;
  21          sbit led7 = P2^6;
  22          sbit led8 = P2^7;
  23          
  24          typedef unsigned char u8;
  25          u8 WifiRcv[10];      //串口接收缓存区
  26          u8 WifiRcvAt[10];    //保存串口接收到的数据
  27          u8 WifiRcvCount = 0; //串口接收计数
  28          u8 WifiAtFlag = 0;   //完整At指令接收完成标志
  29          
  30          U8  str[5]={"RS23"};
  31          U8  U8T_data_H,U8T_data_L,U8RH_data_H,U8RH_data_L,U8checkdata;
  32          U8 temp[20];    //实际发送的字符加上一个'\0'作为发送结束标志，总共20个
  33          U8 temp1[10];   //temp1总共作为复用
  34          
  35          
  36          void UsartInit(void)
  37          {
  38   1              SCON=0x50;   //设置为工作方式1
  39   1              TMOD=0X20;       //设置计数器工作方式2
  40   1              PCON=0X80;       //波特率加倍
  41   1              TH1=0XF3;        //计数器初始值设置
  42   1              TL1=0XF3;        //比特率设置为4800
  43   1              ES=1;        //打开接收中断
  44   1              EA=1;        //代开总中断
  45   1              TR1=1;       //打开计数器
  46   1      }
  47          
  48          void delay1s(u8 sec)   //使用仿真调试时间为1.0023s
  49          {
  50   1              u8 t1,t2,t3,t4;
  51   1              for(t3=sec;t3>0;t3--)
  52   1                      for(t1=0;t1<192;t1++)
  53   1                              for(t2=0;t2<149;t2++)
  54   1                                      for(t4=0;t4<10;t4++);
  55   1      }
C51 COMPILER V9.01   MAIN                                                                  05/17/2018 14:39:28 PAGE 2   

  56          
  57          void UartRecv() interrupt 4
  58          {
  59   1              u8 i = 0;
  60   1              if(RI==1)
  61   1              {       
  62   2                      RI=0;                                           //接收中断信号清零，将继续接收
  63   2                      WifiRcv[WifiRcvCount]=SBUF; //进行一个字节的接收
  64   2                      //***代表着控制浇水，停止浇水，施肥，停止施肥***//
  65   2                      if(WifiRcv[WifiRcvCount] == 'z') led4=0;  //在中断函数中使用控制命令
  66   2                      if(WifiRcv[WifiRcvCount] == 'Z') led4=1;  //使用的是没有被接收到的字母
  67   2                      if(WifiRcv[WifiRcvCount] == 'j') led5=0;
  68   2                      if(WifiRcv[WifiRcvCount] == 'J') led5=1;
  69   2                      WifiRcvCount++;                         //字符串的接收字节数增加
  70   2                                      //完整的AT指令是以0x0d 0x0a结尾，检测是否收到完整的AT指令
  71   2                      if(WifiRcvCount >= 2 && WifiRcv[WifiRcvCount-1]==0x0a && WifiRcv[WifiRcvCount-2]==0x0d )
  72   2                      {
  73   3                              //一旦收到0x0a 0x0d ,就将数据保存起来。用于用户主函数的判断
  74   3                              for(i=0; i<WifiRcvCount; i++)
  75   3                              {
  76   4                                      WifiRcvAt[i] = WifiRcv[i];  //进行赋值
  77   4                                      WifiRcv[i] = 0;  //将接收缓冲区进行清零处理
  78   4                              }
  79   3                              WifiRcvCount = 0;  //计数值进行置零处理
  80   3                              WifiAtFlag = 1;    //收到完整的At指令时，进行置一操作
  81   3      
  82   3      
  83   3                      }else if(WifiRcvCount >= 10)  
  84   2                      {
  85   3                              //防止接收到的数据超过设置的存储区域，进行置零操作，清除之前接收的数据
  86   3                              WifiRcvCount = 0;
  87   3                      }
  88   2              }
  89   1      
  90   1      
  91   1      }
  92            
  93          void UartSends(u8 *str)
  94          {
  95   1              ES = 0;                           //不允许产生中断，防止干扰
  96   1              while(*str != '\0')  //检查发送的字符串结尾'\0'
  97   1              {
  98   2              
  99   2                      SBUF=*str;               //对发送的字符串逐个进行发送
 100   2                      while(!TI);      //等待发送完成信号（TI=1）出现
 101   2                      TI=0;                    //置零操作
 102   2                      str++;                   //继续下一个字符串的发送
 103   2              }
 104   1              ES = 1;                          //恢复允许中断
 105   1      }
 106          
 107          
 108          
 109          void main(void)
 110          {       
 111   1              unsigned char i = 0;
 112   1              while(1) {
 113   2                      UsartInit();     //对串口进行初始化操作
 114   2                      delay1s(5);              //延时2秒
 115   2      
 116   2                      UartSends("AT+CIPMUX=1\r\n");   //启用模块多连接
 117   2                      delay1s(4);
C51 COMPILER V9.01   MAIN                                                                  05/17/2018 14:39:28 PAGE 3   

 118   2                      if(strstr(WifiRcvAt,"OK"))  
 119   2                      {                                                 
 120   3                              led1 = 0;                       //信号灯1，指示连接上服务器
 121   3                              showHumTemp();  //先初始化DHT11传感器，传感器需要花费2~3秒才能初始化完成
 122   3                              UartSends("AT+CIPSTART=4,\"TCP\",\"119.23.241.38\",1234\r\n");
 123   3                              delay1s(4);                                       //连上远程 TCP 服务器 
 124   3      
 125   3                          while(1)
 126   3                              {
 127   4                                      UartSends("AT+CIPSEND=4,43");
 128   4                                      UartSends("\r\n");
 129   4      
 130   4                                      //初始化并发送DHT11传感器数值
 131   4                                      showHumTemp();
 132   4                                      delay1s(1);
 133   4                                      UartSends(temp);
 134   4                                      UartSends("\r\n");
 135   4                                      //delay1s(2);
 136   4      
 137   4                                      //初始化并发送光电传感器数值
 138   4                                      showIllumination();
 139   4                                      UartSends(temp1);
 140   4                                      UartSends("\r\n");
 141   4                                      //delay1s(2);
 142   4      
 143   4                                      //初始化并发送土壤水分传感器数值
 144   4                                      showSoilMoisture();
 145   4                                      UartSends(temp1);
 146   4                                      UartSends("\r\n");
 147   4                                      led2 = 0;                //指示灯2，表示数据发送完成
 148   4                                      delay1s(5);     
 149   4      
 150   4                                      //数据发送过程中如果和服务器断开连接，则跳出循环，停止数据发送
 151   4                                      //等待下一次连接
 152   4                                      if(strstr(WifiRcvAt,"ERROR"))   //数据发送出错会接收到Wifi模块发来的
 153   4                                      {                                                               //ERROR字符，指示出错
 154   5                                              led3 = 0;                                       //指示灯3，表示数据发送过程中出现错误
 155   5                                              break;
 156   5                                      }               
 157   4                              }
 158   3                              
 159   3                      }
 160   2                      //断开和服务器的连接
 161   2                      UartSends("AT+CIPCLOSE=4\r\n");
 162   2                      delay1s(2);
 163   2                      led1 = 1;
 164   2                      led2 = 1;
 165   2                      led3 = 1;       
 166   2              }        
 167   1      }
 168                  
 169          
 170          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    384    ----
   CONSTANT SIZE    =    101    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62       1
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.01   MAIN                                                                  05/17/2018 14:39:28 PAGE 4   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
